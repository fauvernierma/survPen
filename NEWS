survPen v2.0.0
==============

Changes:
* New model available : penalized relative mortality ratio model (extension of Andersen's model (1985)) via option type="mult"
* New function splitmult to split individual dataset according to 1-year interval to fit relative mortality ratio models
* New dataset expected.table to given an example of reference mortality table (French women in that case)
* Cumulative hazard calculation has been redesigned (along with first and second derivatives wrt beta) and written in C.
The algorithm divided its memory usage by almost 3 when dealing with large datasets (> 100 000 individuals and 100 parameters).
As a consequence, function model.cons no longer returns a haz.GL object as it was too computationaly expensive in terms of memory usage.
* New function predSNS to derive standardized and population (net) survival with confidence intervals from a fitted model
* New R object listWicss added in the data section to give the standard ICSS weights for age-standardized cancer survival calculation
* Option type="HR" in the predict function now allows for calculation of survival difference with CIs
* Vignette has been updated with survival difference predictions and relative mortality ratio model
* In the summary, parametric coefficients are now also reported on the exponential scale along with CIs
* n.legendre is now NULL as default. If not supplied it is set to 20 for (excess) hazard models and 10 for relative mortality ratio models 
* Thanks to Elsa Coz, new argument cluster available to specify a cluster variable for marginal hazard (intensity) models 
-> automatically derives robust standard errors in presence of correlated survival times (for example in recurrent events setting)

survPen v1.6.0
==============

Changes:
* There is a new internal way of specifying piecewise (excess) hazard via pwcst function. This specification internalizes the use
of the cut function and performs an exact calculation of the cumulative hazard
* Derivative calculations for LAML are no longer performed at fixed values of smoothing parameters
* Examples for hazard ratio prediction have been added in the help of predict.survPen function


survPen v1.5.2
==============

Changes:
* Arguments t0, t1, event and expected are transformed into numeric vectors (in case the user specifies an integer vector that used to make the C code bug)


survPen v1.5.1
==============

Changes:
* the call to OpenMP in the Makevars file in src folder has been removed. Indeed, this call made survPen tend to use all
cores available on the machine. This behaviour can become problematic when used on servers.
* the print.summary function now hides the object and only prints relevant information in a nice standard format


survPen v1.5.0
==============

Changes:
* Gradient and Hessian of LCV and LAML are coded in compiled C code. The associated code has also been reorganized
* colSums and cor.var are also rewritten in C
* hazard ratios and associated CIs added to predict method
* edf1 is taken as an upper bound for edf2 (as in mgcv)


survPen v1.3.0
==============

Changes:
* added functions '%mult%' and '%vec%' for matrix multiplication in compiled C code 
in order to substantially reduce computation time

Debugging:
* beta.ini is now correctly reparameterized before fitting
* the class of matrices are now tested using 'inherits' instead of 'class(object)=='


survPen v1.2.0
==============

Changes:
* the computation burden has been reduced by only calculating the diagonal
elements of the fourth derivatives of the likelihood (without precision loss)
* if the LU decompistion fails to invert the penlaty matrix, A QR decomposition is tried. 
If the QR fails, a Cholesky decomposition is tried
* corrected knots management when they are in a list format (takes into account the names of the list instead of the order of appearance)
* all crossproducts are now evaluated by the crossprod function
* the penalized log-likelihood at convergence was renamed ll.pen (instead of ll)


survPen v1.1.0 
==============

Changes:

* includes a vignette called Survival_analysis_with_survPen that shows detailed examples of the package functionalities
* examples 5 and 6 from the help page were deleted as they were clumsy. More detailed examples are available in the vignette Survival_analysis_with_survPen 
* returns a convergence indicator (converged = TRUE or FALSE)
* when using a factor by variable, same.rho=FALSE is used as default instead of same.rho=TRUE
* function crs returns knots when intercept=FALSE


survPen v1.3.1
==============

Changes:
* edf1 is taken as an upper bound for edf2 (as in mgcv)


survPen v1.3.0
==============

Changes:
* added functions '%mult%' and '%vec%' for matrix multiplication in compiled C code 
in order to substantially reduce computation time

Debugging:
* beta.ini is now correctly reparameterized before fitting
* the class of matrices are now tested using 'inherits' instead of 'class(object)=='


survPen v1.2.0
==============

Changes:
* the computation burden has been reduced by only calculating the diagonal
elements of the fourth derivatives of the likelihood (without precision loss)
* if the LU decompistion fails to invert the penlaty matrix, A QR decomposition is tried. 
If the QR fails, a Cholesky decomposition is tried
* corrected knots management when they are in a list format (takes into account the names of the list instead of the order of appearance)
* all crossproducts are now evaluated by the crossprod function
* the penalized log-likelihood at convergence was renamed ll.pen (instead of ll)


survPen v1.1.0 
==============

Changes:

* includes a vignette called Survival_analysis_with_survPen that shows detailed examples of the package functionalities
* examples 5 and 6 from the help page were deleted as they were clumsy. More detailed examples are available in the vignette Survival_analysis_with_survPen 
* returns a convergence indicator (converged = TRUE or FALSE)
* when using a factor by variable, same.rho=FALSE is used as default instead of same.rho=TRUE
* function crs returns knots when intercept=FALSE


